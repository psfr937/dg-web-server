import { isEqual } from 'lodash';
import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import { withRouter } from 'next/router';
import qs from 'qs';
import algoliasearch from 'algoliasearch/lite';
import { findResultsState } from 'react-instantsearch-dom/server';
import Shop from '../../components/Shop'
import Head from '@components/ecommerce/Head'
import appSt from "../home.module.scss";
import Nav from "@components/Nav";
import st from "../catalogPage.module.scss";
const searchClient = algoliasearch(
  'XSR6ZP990B', //'B1G2GM9NG0',
  'e3d7f522186e977cdb3d84474d85f038' //'aadef574be1f9252bb48d4ea09b5cfe5'
);

const updateAfter = 700;

const createURL = state => `?${qs.stringify(state)}`;

const pathToSearchState = path =>
  path.includes('?') ? qs.parse(path.substring(path.indexOf('?') + 1)) : {};

const searchStateToURL = searchState =>
  searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';

const DEFAULT_PROPS = {
  searchClient,
  indexName: 'dev_dg',
};

export default function Page(props){
  // static propTypes = {
  //   router: PropTypes.object.isRequired,
  //   resultsState: PropTypes.object,
  //   searchState: PropTypes.object,
  // };

  const [searchState, setSearchState ] = useState(props.searchState);
  const [ lastRouter, setLastRouter ] = useState(props.router);


  useEffect(() => {
      setSearchState(pathToSearchState(props.router.asPath));
      setLastRouter(props.router);
  }, [props.router]);

  const onSearchStateChange = searchStateValue => {
    clearTimeout(this.debouncedSetState);

    this.debouncedSetState = setTimeout(() => {
      const href = searchStateToURL(searchStateValue);

      props.router.push(href, href, {
        shallow: true,
      });
    }, updateAfter);

    setSearchState(searchStateValue)
  };


    return (
      <div>
        <style jsx global>{`
    body {
      margin: 0;
      overflow-x: hidden;
    }
  `}</style>
        <Head/>
        <main className={appSt.app}>
          <Nav/>
          <div className={st.navPadding}>
            <Shop
              {...DEFAULT_PROPS}
              searchState={searchState}
              resultsState={props.resultsState}
              onSearchStateChange={onSearchStateChange}
              createURL={createURL}
            />
          </div>
        </main>
      </div>
    );

}


Page.getInitialProps = async ({ asPath }) => {
  const searchState = pathToSearchState(asPath);
  const resultsState = await findResultsState(Shop, {
    ...DEFAULT_PROPS,
    searchState,
  });

  return {
    resultsState: resultsState,
    searchState,
  };
}
