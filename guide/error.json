[{
  "message": "connect ECONNREFUSED 127.0.0.1:5000",
  "name": "Error",
  "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1146:16)\n    at TCPConnectWrap.callbackTrampoline (internal/async_hooks.js:131:14)",
  "config": {
    "url": "http://localhost:5000/inventories/52",
    "method": "get",
    "headers": {
      "Accept": "application/json, text/plain, */*",
      "User-Agent": "axios/0.21.1"
    },
    "transformRequest": [
      null
    ],
    "transformResponse": [
      null
    ],
    "timeout": 0,
    "withCredentials": true,
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
    "maxContentLength": -1,
    "maxBodyLength": -1
  },
  "code": "ECONNREFUSED"
},

{
  "message": "Request failed with status code 500",
  "name": "Error",
  "stack": "Error: Request failed with status code 500\n    at createError (/Users/psfr937/Development/main/dg-web-server/node_modules/axios/lib/core/createError.js:16:15)\n    at settle (/Users/psfr937/Development/main/dg-web-server/node_modules/axios/lib/core/settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (/Users/psfr937/Development/main/dg-web-server/node_modules/axios/lib/adapters/http.js:260:11)\n    at IncomingMessage.emit (events.js:327:22)\n    at endReadableNT (internal/streams/readable.js:1327:12)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21)",
  "config": {
    "url": "http://localhost:5000/inventories/52",
    "method": "get",
    "headers": {
      "Accept": "application/json, text/plain, */*",
      "User-Agent": "axios/0.21.1"
    },
    "transformRequest": [
      null
    ],
    "transformResponse": [
      null
    ],
    "timeout": 0,
    "withCredentials": true,
    "xsrfCookieName": "XSRF-TOKEN",
    "xsrfHeaderName": "X-XSRF-TOKEN",
    "maxContentLength": -1,
    "maxBodyLength": -1
  }
},
  {
    "status": 500,
    "statusText": "Internal Server Error",
    "config": {
      "object": "object"
    },
    "headers": {
      "object": "object"
    },
    "data": {
      "object": "object"
    },
    "request": {
      "object": "object"
    }
  },
  {
    "status": 500,
    "errors": [
      {
        "code": "DB_OPERATION_FAIL",
        "detail": {},
        "meta": {
          "path": "/inventories/52"
        },
        "title": "Database Operation Failed"
      }]
  }
]